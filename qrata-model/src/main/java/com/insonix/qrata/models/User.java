package com.insonix.qrata.models;

// Generated Feb 6, 2013 11:51:22 AM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", schema = "public")
@Cache(usage=CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class User extends CommonEntity implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -68340675336244656L;

	private long id;
	private String userName;
	private String password;
	private UserInfo userinfo;
	private Role role;
	private Set<TopicExpertAssignment> topicExpertAssignments = new HashSet<TopicExpertAssignment>(0);
	private Set<SiteReview> siteReviews;
			
	public User() {		
	}

	public User(String userName, String password , UserInfo userInfo ) {
		this.userName = userName;
		this.password = password;
		this.userinfo = userInfo;
		this.setSortName(this.getUserinfo().getLastname());
	}

	@Id
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="users_id_seq")
	@SequenceGenerator(name="users_id_seq", initialValue = 1, sequenceName="user_id_seq", allocationSize=1)
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Column(name = "username",unique=true, nullable = false, length = 50)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}
	
	@Override
	public void setSortName(String sortName){
		super.setSortName(sortName);
	}

	@Column(name = "password")
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}


	/**
	 * @return the userinfo
	 */
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "user", cascade = CascadeType.ALL)
	public UserInfo getUserinfo() {
		return userinfo;
	}

	/**
	 * @param userinfo the userinfo to set
	 */
	public void setUserinfo(UserInfo userinfo) {
		this.userinfo = userinfo;
		this.setSortName(this.getUserinfo().getLastname());
	}

	/**
	 * @return the role
	 */
	@OneToOne(fetch=FetchType.EAGER)
	@JoinColumn(name="role_id")
	public Role getRole() {
		return role;
	}
	
	public void setRole(Role role) {
		this.role = role;
	}
	
	/**
	 * return Topics
	 */
	@OneToMany(fetch=FetchType.LAZY , mappedBy="expert", cascade=CascadeType.ALL)
	@Cache(usage=CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
	public Set<TopicExpertAssignment> getTopicExpertAssignments() {
		return topicExpertAssignments;
	}
	
	public void setTopicExpertAssignments(
			Set<TopicExpertAssignment> topicExpertAssignments) {
		this.topicExpertAssignments = topicExpertAssignments;
	}

	@OneToMany(mappedBy ="user" ,fetch=FetchType.LAZY , cascade = CascadeType.ALL)
	@Cache(usage=CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
	public Set<SiteReview> getSiteReviews() {
		return siteReviews;
	}

	public void setSiteReviews(Set<SiteReview> siteReviews) {
		this.siteReviews = siteReviews;
	}
	
	

	@Override
	public int hashCode() {
		return HashCodeBuilder.reflectionHashCode(this);
	}

	@Override
	public boolean equals(Object obj) {
		return EqualsBuilder.reflectionEquals(this, obj);
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "User [id=" + id + ", userName=" + userName +"]";
	}

}
