package com.insonix.qrata.models;

// Generated Feb 6, 2013 11:51:22 AM by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * SitereviewsRatingcriteria generated by hbm2java
 */
@Entity
@Table(name = "sitereviews_ratingcriteria", schema = "public")
@Cache(usage=CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class SiteReviewRatingCriteria extends CommonEntity implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6518413094945787753L;
	
	private long id;
	private Site sites;
	private RatingCriteria ratingCriteria;
	private Topic topics;
	private SiteReview siteReviews;
	private Integer weight;
	private short votingPercentage;
	private List<SiteReviewRatingCriteriaVoting> criteriaVotings;

	public SiteReviewRatingCriteria() {
	}

	public SiteReviewRatingCriteria(long id) {
		this.id = id;
	}

	
	
	/**
	 * @param userByCreatedBy
	 * @param userByUserId
	 * @param sites
	 * @param ratingCriteria
	 * @param topics
	 * @param sitereviews
	 * @param weight
	 * @param status
	 * @param lastUpdated
	 * @param dateCreated
	 * @param uuid
	 */
	public SiteReviewRatingCriteria(
			Site sites, RatingCriteria ratingCriteria, Topic topics,
			SiteReview siteReviews, Integer weight, Short status,
			Date lastUpdated, Date dateCreated, Serializable uuid) {
		super();
		this.sites = sites;
		this.ratingCriteria = ratingCriteria;
		this.topics = topics;
		this.siteReviews = siteReviews;
		this.weight = weight;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="sitereviewratingcriteria_id_seq")
	@SequenceGenerator(name="sitereviewratingcriteria_id_seq", initialValue=1, sequenceName="sitereviewratingcriteria_id_seq", allocationSize=1)
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "site_id")
	public Site getSites() {
		return this.sites;
	}

	public void setSites(Site sites) {
		this.sites = sites;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ratingcriteria_id")
	public RatingCriteria getRatingCriteria() {
		return this.ratingCriteria;
	}

	public void setRatingCriteria(RatingCriteria ratingCriteria) {
		this.ratingCriteria = ratingCriteria;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "topic_id")
	public Topic getTopics() {
		return this.topics;
	}

	public void setTopics(Topic topics) {
		this.topics = topics;
	}

	@ManyToOne(fetch = FetchType.LAZY , cascade = CascadeType.ALL)
	@JoinColumn(name = "sitereview_id")
	public SiteReview getSiteReviews() {
		return this.siteReviews;
	}

	public void setSiteReviews(SiteReview siteReviews) {
		this.siteReviews = siteReviews;
	}

	@Column(name = "weight")
	public Integer getWeight() {
		return this.weight;
	}

	public void setWeight(Integer weight) {
		this.weight = weight;
	}


	/**
	 * @return the votingPercentage
	 */
	@Transient
	public short getVotingPercentage() {
		return votingPercentage;
	}

	/**
	 * @param votingPercentage the votingPercentage to set
	 */
	public void setVotingPercentage(short votingPercentage) {
		this.votingPercentage = votingPercentage;
	}

	/**
	 * @return the criteriaVotings
	 */
	@OneToMany(mappedBy = "siteReviewRatingCriteria", cascade = CascadeType.ALL)
	public List<SiteReviewRatingCriteriaVoting> getCriteriaVotings() {
		return criteriaVotings;
	}

	/**
	 * @param criteriaVotings the criteriaVotings to set
	 */
	public void setCriteriaVotings(List<SiteReviewRatingCriteriaVoting> criteriaVotings) {
		this.criteriaVotings = criteriaVotings;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "SiteReviewRatingCriteria [id=" + id + ", sites=" + sites.getId()
				+ ", ratingCriteria=" + ratingCriteria.getId() + ", topics=" + topics.getId()
				+ ", siteReviews=" + siteReviews.getId() + ", weight=" + weight
				+ ", toString()="
				+ super.toString() + "]";
	}

	@Override
	public int hashCode() {
		return HashCodeBuilder.reflectionHashCode(this);
	}

	@Override
	public boolean equals(Object obj) {
		return EqualsBuilder.reflectionEquals(this, obj);
	}
	
}
